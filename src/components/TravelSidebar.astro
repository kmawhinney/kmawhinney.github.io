---
const countriesVisited = [
  { name: "Canada 🇨🇦", value: "canada" },
  { name: "United States 🇺🇸", value: "usa" },
  { name: "Mexico 🇲🇽", value: "mexico" },
  { name: "England 🏴󠁧󠁢󠁥󠁮󠁧󠁿", value: "england" },
  { name: "Ireland 🇮🇪", value: "ireland" },
  { name: "Scotland 🏴󠁧󠁢󠁳󠁣󠁴󠁿", value: "scotland" },
  { name: "Guatemala 🇬🇹", value: "guatemala" },
];

const bucketList = [
  { name: "Iceland 🇮🇸" },
  { name: "Spain 🇪🇸" },
  { name: "Portugal 🇵🇹" },
  { name: "Japan 🇯🇵" },
  { name: "India 🇮🇳" },
];
---

<aside id="sidebar" class="sm:w-1/4 w-full sm:flex hidden sm:sticky top-[calc(64px+16px)] self-start space-y-4 flex-col rounded-lg">
    <!-- Countries Visited -->
    <div class="border border-zinc-700 rounded-lg shadow-md p-4">
      <h2 class="text-lg font-semibold mb-2">Countries Visited</h2>
      <ul class="text-gray-400 space-y-1">
        <li>
          <button 
            class="filter-btn text-left w-full cursor-pointer hover:bg-zinc-700 py-1 transition-colors rounded-md"
            data-filter="all"
          >
            All
          </button>
        </li>
        {countriesVisited.map((country) => (
          <li>
            <button 
              class="filter-btn text-left w-full cursor-pointer hover:bg-zinc-700 py-1 transition-colors rounded-md"
              data-filter={country.value}
            >
              {country.name}
            </button>
          </li>
        ))}
      </ul>
      
    </div>

    <!-- Bucket List -->
    <div class="border border-zinc-700 rounded-lg shadow-md p-4">
      <h2 class="text-lg font-semibold mb-2">Bucket List</h2>
      <ul class="text-gray-400 space-y-2">
        {bucketList.map((item) => (
          <li>
            <p>{item.name}</p>
          </li>
        ))}
      </ul>
    </div>
</aside>


<script is:inline>
  function initializeTravelFilter() {
    const travelPage = document.querySelector(".travel-page");
    if (!travelPage) return; // Ensure script only runs on Travel page

    const filterButtons = document.querySelectorAll(".filter-btn");
    const cardsContainer = document.querySelector(".grid"); // Use correct container
    const allCards = Array.from(document.querySelectorAll(".travel-card")); // Select only travel cards

    if (!filterButtons.length || !allCards.length) return;

    function applyFilter(filter) {
      // Reset button styles
      filterButtons.forEach(btn => {
        btn.classList.remove("text-white", "font-bold");
        btn.classList.add("text-gray-400", "hover:text-white");
      });

      // Highlight active button
      const activeButton = document.querySelector(`[data-filter="${filter}"]`);
      if (activeButton) {
        activeButton.classList.remove("text-gray-400", "hover:text-white");
        activeButton.classList.add("text-white", "font-bold");
      }

      // Clear container and re-add filtered elements
      cardsContainer.innerHTML = ""; // Clears grid
      allCards.forEach(card => {
        const cardFilters = card.dataset.filter.split(" "); // Convert filter attribute to array
        if (filter === "all" || cardFilters.includes(filter)) {
          cardsContainer.appendChild(card); // Re-add only matching cards
        }
      });
    }

    // Attach event listeners
    filterButtons.forEach(button => {
      button.addEventListener("click", () => applyFilter(button.dataset.filter));
    });

    // Set default filter to "All"
    applyFilter("all");
  }

  // Initialize filter on page load
  document.addEventListener("astro:page-load", initializeTravelFilter);
</script>